{"version":3,"sources":["assets/img/terminal.png","assets/img/code.png","front/components/Header.js","front/components/Navbar.js","front/components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Row","Col","md","style","padding","backgroundColor","width","text","language","theme","atomOneDark","wrapLines","overflow","paddingTop","marginLeft","src","require","maxWidth","alt","srcset","overflowX","marginTop","zIndex","textAlign","textJustify","margin","NavbarContainer","useState","isOpen","setIsOpen","Navbar","light","expand","Container","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","FooterContainer","xmlns","x","y","height","viewBox","fill","d","fontWeight","App","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b752c2af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/terminal.58a9bbb7.png\";","module.exports = __webpack_public_path__ + \"static/media/code.91439249.png\";","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { CopyBlock, atomOneDark } from \"react-code-blocks\";\n\nconst Header = () => {\n\n    return (\n        <>\n            <section className=\"fryday-header\">\n                <Row>\n                    <Col md=\"6\" className=\"\">\n                        <div style={{ padding: '5rem 5rem 2rem 5rem' }}>\n                            <h2>\n                                Cli++ <span className=\"text-muted\">Complete Solution for command line development</span>\n                            </h2>\n                            <p>\n                                Cli++ provides a framework for building cli apps with expressive, elegant syntax. I’ve already laid the foundation — freeing you to create awesome cli applications without sweating the small things.\n                            </p>\n                        </div>\n                        <div style={{ padding: '3rem 12rem 2rem 5rem', backgroundColor: '#f7f7f7', width: '130%' }}>\n                            <h4>Installation</h4>\n                            <div className=\"mb-3\">\n                                <CopyBlock\n                                    text={`git clone https://github.com/manishsahani999/cli-plus-plus.git`}\n                                    language={'js'}\n                                    // showLineNumbers={true}\n                                    theme={atomOneDark}\n                                    wrapLines\n                                />\n                            </div>\n                            <p>Will be available on brew after first release, right now you need to add this path under includes headers. </p>\n                        </div>\n                        <div style={{ padding: '3rem 5rem 2rem 5rem' }}>\n                            <h4 className=\"text-muted\">\n                                how would you <span className=\"text-danger\">build</span> cli++?\n                                The good news is that, there's <span className=\"text-dark\"> nothing to build</span>.\n                            </h4>\n                            <p>\n                                The library is a header only library, just <code>#include</code> and move on to your application. \n                                <span className=\"text-muted ml-1\">\n                                    The distribution comes with a cmake file, to help you start with the building your project\n                                    for any platform.\n                                </span>\n                            </p>\n                        </div>\n                    </Col>\n                    <Col md=\"6\" style={{ overflow: 'hidden', paddingTop: '2.3rem' }}>\n                        <h1 className=\"h1\" style={{ marginLeft: '4.2rem' }}>\n                            Delightful C++ Command line development\n                        </h1>\n                        <div>\n                            <img src={require('assets/img/terminal.png')} style={{ maxWidth: '80rem' }} alt=\"\" srcset=\"\" />\n                        </div>\n                    </Col>\n                </Row>\n            </section>\n            <section style={{ overflowX: 'hidden' }}>\n                <Row>\n                    <Col>\n                        <div>\n                            <img src={require('assets/img/code.png')} style={{ maxWidth: '80rem', marginLeft: '-21rem', marginTop: '-1rem', zIndex: '2' }} alt=\"\" srcset=\"\" />\n                        </div>\n                    </Col>\n                    <Col>\n                        <div>\n                            <h2 className=\"mb-5\" >\n                                Lets you focus on your awesome application\n                                <span className=\"text-muted\" style={{}}> and takes away the pain of options and arguments handling.</span>\n                            </h2>\n                        </div>\n                        <div style={{ padding: '3rem', backgroundColor: '#f7f7f7', marginLeft: '-13rem' }}>\n                            <p style={{ textAlign: 'justify', textJustify: 'inter-word', margin: '0' }}>\n                                A suite of tools to build attractive command line interfaces (CLIs), from semantic elements: headers, lists, alerts, paragraphs, etc. \n                                \n                            </p>\n                        </div>\n                    </Col>\n                </Row>\n            </section>\n        </>\n    )\n}\n// Supports theming via a CSS-like language. It also contains a number of lower level CLI elements: rules, boxes, trees, and Unicode symbols with ASCII alternatives. It integrates with the crayon package to support ANSI terminal colors.\n\nexport default Header;","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  NavItem,\n  NavLink, Container\n} from 'reactstrap';\n\nconst NavbarContainer = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  return (\n    <>\n      <div>\n        <Navbar className=\"fryday-navbar\" light expand=\"md\">\n          <Container style={{ maxWidth: '1240px' }}>\n            <NavbarBrand className=\"fryday-navbar-brand\" href=\"/\">\n              Wire under the ocean\n            </NavbarBrand>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink href=\"/components/\">Get Started</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/components/\">API</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/components/\">Docs</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/components/\">Blog</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    </>\n  );\n}\n\nexport default NavbarContainer;\n","import React from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavbarToggler,\n    NavItem,\n    NavLink, Container, Row, Col\n} from 'reactstrap';\n\nconst FooterContainer = () => {\n    return (\n        <>\n            <section className=\"fryday-footer\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col md=\"1\">\n                                    <span>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                                            width=\"35\" height=\"35\"\n                                            viewBox=\"0 0 24 24\"\n                                            style={{ fill: '#000000' }}>    <path d=\"M10.9,2.1c-4.6,0.5-8.3,4.2-8.8,8.7c-0.5,4.7,2.2,8.9,6.3,10.5C8.7,21.4,9,21.2,9,20.8v-1.6c0,0-0.4,0.1-0.9,0.1 c-1.4,0-2-1.2-2.1-1.9c-0.1-0.4-0.3-0.7-0.6-1C5.1,16.3,5,16.3,5,16.2C5,16,5.3,16,5.4,16c0.6,0,1.1,0.7,1.3,1c0.5,0.8,1.1,1,1.4,1 c0.4,0,0.7-0.1,0.9-0.2c0.1-0.7,0.4-1.4,1-1.8c-2.3-0.5-4-1.8-4-4c0-1.1,0.5-2.2,1.2-3C7.1,8.8,7,8.3,7,7.6c0-0.4,0-0.9,0.2-1.3 C7.2,6.1,7.4,6,7.5,6c0,0,0.1,0,0.1,0C8.1,6.1,9.1,6.4,10,7.3C10.6,7.1,11.3,7,12,7s1.4,0.1,2,0.3c0.9-0.9,2-1.2,2.5-1.3 c0,0,0.1,0,0.1,0c0.2,0,0.3,0.1,0.4,0.3C17,6.7,17,7.2,17,7.6c0,0.8-0.1,1.2-0.2,1.4c0.7,0.8,1.2,1.8,1.2,3c0,2.2-1.7,3.5-4,4 c0.6,0.5,1,1.4,1,2.3v2.6c0,0.3,0.3,0.6,0.7,0.5c3.7-1.5,6.3-5.1,6.3-9.3C22,6.1,16.9,1.4,10.9,2.1z\"></path></svg>\n                                    </span>\n                                </Col>\n                                <Col>\n                                    <span>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                                            width=\"35\" height=\"35\"\n                                            viewBox=\"0 0 48 48\"\n                                            style={{ fill: '#000000' }}><path d=\"M36.5,6h-25C8.468,6,6,8.468,6,11.5v25c0,3.032,2.468,5.5,5.5,5.5h25c3.032,0,5.5-2.468,5.5-5.5v-25\tC42,8.468,39.532,6,36.5,6z M18,34c0,0.553-0.447,1-1,1h-3c-0.553,0-1-0.447-1-1V21c0-0.553,0.447-1,1-1h3c0.553,0,1,0.447,1,1V34z M15.5,18c-1.381,0-2.5-1.119-2.5-2.5c0-1.381,1.119-2.5,2.5-2.5s2.5,1.119,2.5,2.5C18,16.881,16.881,18,15.5,18z M35,34\tc0,0.553-0.447,1-1,1h-3c-0.553,0-1-0.447-1-1v-7.5c0-1.379-1.121-2.5-2.5-2.5S25,25.121,25,26.5V34c0,0.553-0.447,1-1,1h-3\tc-0.553,0-1-0.447-1-1V21c0-0.553,0.447-1,1-1h3c0.553,0,1,0.447,1,1v0.541C26.063,20.586,27.462,20,29,20c3.309,0,6,2.691,6,6V34z\"></path></svg>\n                                    </span>\n                                </Col>\n                                <Col>\n                                    <span><i></i></span>\n                                </Col>\n                                <Col>\n                                    <span><i></i></span>\n                                </Col>\n                            </Row>\n                            <h1 style={{ fontWeight: '100' }} className=\"mt-5\">Wire Under the Ocean</h1>\n                            <span className=\"text-muted\">\n                                supercharge you c++ command line interface development\n                            </span>\n                        </Col>\n                        <Col md=\"3\" className=\"text-justify\">\n                            <h4>About Us</h4>\n                            <p>\n                                Stack is a robust multipurpose HTML template designed with modularity at the core. Easily combine over 290 interface blocks to create websites for any purpose.\n                            </p>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </>\n    );\n}\n\nexport default FooterContainer;\n","import React from 'react';\nimport Header from 'front/components/Header';\nimport NavbarContainer from './front/components/Navbar';\nimport FooterContainer from \"front/components/Footer\";\n\nfunction App() {\n  return (\n    <>\n      <NavbarContainer /> \n      <Header/>\n      <FooterContainer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Stylesheets \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}